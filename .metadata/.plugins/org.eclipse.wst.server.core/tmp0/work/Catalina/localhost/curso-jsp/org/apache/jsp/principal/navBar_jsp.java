/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.13
 * Generated at: 2024-05-11 00:23:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.principal;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class navBar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link href=\"webjars/bootstrap/5.3.3/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style_principal.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- Script -->\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<nav class=\"navbar navbar-dark bg-dark fixed-top \">\r\n");
      out.write("		<div class=\"container-fluid\">\r\n");
      out.write("			<a class=\"navbar-brand\" href=\"#\"> <img\r\n");
      out.write("				src=\"assets/bootstrap-logo.svg\" alt=\"\" width=\"30\" height=\"24\"\r\n");
      out.write("				class=\"d-inline-block align-text-top\"> Bootstrap\r\n");
      out.write("			</a> <a class=\"navbar-brand\" href=\"#\">Offcanvas dark navbar</a>\r\n");
      out.write("\r\n");
      out.write("			<button class=\"navbar-toggler\" type=\"button\"\r\n");
      out.write("				data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasDarkNavbar\"\r\n");
      out.write("				aria-controls=\"offcanvasDarkNavbar\" aria-label=\"Toggle navigation\">\r\n");
      out.write("				<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("			</button>\r\n");
      out.write("			<div class=\"offcanvas offcanvas-end text-bg-dark\" tabindex=\"-1\"\r\n");
      out.write("				id=\"offcanvasDarkNavbar\" aria-labelledby=\"offcanvasDarkNavbarLabel\">\r\n");
      out.write("				<div class=\"offcanvas-header\">\r\n");
      out.write("					<h5 class=\"offcanvas-title\" id=\"offcanvasDarkNavbarLabel\">Dark\r\n");
      out.write("						offcanvas</h5>\r\n");
      out.write("					<button type=\"button\" class=\"btn-close btn-close-white\"\r\n");
      out.write("						data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"offcanvas-body\">\r\n");
      out.write("					<ul class=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n");
      out.write("						<li class=\"nav-item\"><a class=\"nav-link active\"\r\n");
      out.write("							aria-current=\"page\" href=\"#\">Home</a></li>\r\n");
      out.write("						<li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Link</a></li>\r\n");
      out.write("						<li class=\"nav-item dropdown\"><a\r\n");
      out.write("							class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\"\r\n");
      out.write("							data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> Dropdown </a>\r\n");
      out.write("							<ul class=\"dropdown-menu dropdown-menu-dark\">\r\n");
      out.write("								<li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\r\n");
      out.write("								<li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n");
      out.write("								<li>\r\n");
      out.write("									<hr class=\"dropdown-divider\">\r\n");
      out.write("								</li>\r\n");
      out.write("								<li><a class=\"dropdown-item\" href=\"#\">Something else\r\n");
      out.write("										here</a></li>\r\n");
      out.write("							</ul></li>\r\n");
      out.write("\r\n");
      out.write("						<li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("							href=\"");
      out.print(request.getContextPath());
      out.write("/ServletLogin?acao=logout\"><i\r\n");
      out.write("								class=\"icon-logout\"></i> Logout</a></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("					<form class=\"d-flex mt-3\" role=\"search\">\r\n");
      out.write("						<input class=\"form-control me-2\" type=\"search\"\r\n");
      out.write("							placeholder=\"Search\" aria-label=\"Search\">\r\n");
      out.write("						<button class=\"btn btn-success\" type=\"submit\">Search</button>\r\n");
      out.write("					</form>\r\n");
      out.write("					<div class=\"d-flex align-items-center\">\r\n");
      out.write("						<button data-mdb-ripple-init type=\"button\" class=\"btn px-3 me-2\">Login</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("\r\n");
      out.write("	<!-- JavaScript (Opcional) -->\r\n");
      out.write("	<!-- jQuery primeiro, depois Popper.js, depois Bootstrap JS -->\r\n");
      out.write("	<script src=\"webjars/bootstrap/5.3.3/js/bootstrap.bundle.min.js\"\r\n");
      out.write("		integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\"\r\n");
      out.write("		src=\"javaScript/script_page_principal.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
